package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"
	"strings"

	"github.com/getlantern/systray"
)

var pathScripts string

func main() {
	pathScripts = os.Getenv("HOME") + "/.sh-icon-tray"
	CreatePathScript()
	systray.Run(onReady, func() {})
}

func onReady() {
	scripts := GetAllScripts()
	systray.SetIcon(IconTerminal)
	systray.SetTitle("Scripts")
	systray.SetTooltip("Run your scripts :)")

	for _, script := range scripts {
		option := systray.AddMenuItem(script.Name, "")
		go RunScript(option, script)
	}

	mQuit := systray.AddMenuItem("Quit", "Quit this app")
	go func() {
		<-mQuit.ClickedCh
		fmt.Println("Requesting quit")
		systray.Quit()
	}()
}

type FileScripts struct {
	Path  string
	Name  string
	IsDir bool
}

func CreatePathScript() {
	if _, err := os.Stat(pathScripts); os.IsNotExist(err) {
		if err := os.Mkdir(pathScripts, os.ModePerm); err != nil {
			println(&err)
			if err.Error() != "file exists" {
				log.Fatal(err)
			}
		}
	} else {
		fmt.Println("The path exists:", pathScripts)
	}
}

func GetAllScripts() []FileScripts {
	files, err := os.ReadDir(pathScripts)
	if err != nil {
		log.Fatal(err)
	}

	scripts := []FileScripts{}
	for _, file := range files {
		fmt.Println("-> " + pathScripts + "/" + file.Name())
		scripts = append(scripts, FileScripts{
			Path:  pathScripts + "/" + file.Name(),
			Name:  strings.Split(file.Name(), ".")[0],
			IsDir: file.IsDir(),
		})
	}
	return scripts
}

func RunScript(option *systray.MenuItem, script FileScripts) {
	<-option.ClickedCh
	fmt.Println("Run", script.Name)
	cmd := exec.Command("gnome-terminal", "-e", "sh "+script.Path)
	if err := cmd.Start(); err != nil {
		log.Fatal(err)
	}
	println("ok: ", script.Path)
}

var IconTerminal []byte = []byte{
	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x32,
	0x08, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x88, 0xb1, 0x00, 0x00, 0x00,
	0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b,
	0x13, 0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x01, 0xa1, 0x49, 0x44,
	0x41, 0x54, 0x78, 0x9c, 0xed, 0x98, 0xcd, 0x4a, 0xc3, 0x50, 0x10, 0x85,
	0xef, 0x03, 0xf8, 0x0e, 0x8a, 0xf8, 0x8b, 0x28, 0x52, 0x10, 0xd4, 0x2a,
	0xb8, 0x71, 0x29, 0xf8, 0x46, 0x62, 0x66, 0xd2, 0x2e, 0x6b, 0x67, 0x52,
	0xa1, 0xbe, 0x8e, 0xbe, 0x86, 0xd0, 0x82, 0x5a, 0xfc, 0x69, 0x15, 0xd1,
	0x8d, 0x08, 0x47, 0x6e, 0x6b, 0x37, 0x22, 0x28, 0x4d, 0xcc, 0x4d, 0x64,
	0x0e, 0xcc, 0x2e, 0x5c, 0xe6, 0x9b, 0x33, 0x93, 0xc9, 0x8d, 0x73, 0x26,
	0xd3, 0xdf, 0x28, 0x39, 0xc2, 0x94, 0x32, 0xce, 0x84, 0x30, 0x50, 0x06,
	0xca, 0x14, 0x42, 0x18, 0x08, 0xa1, 0xed, 0x19, 0x9c, 0x87, 0x08, 0x9d,
	0x50, 0x06, 0x40, 0x6d, 0x0f, 0xd2, 0x0f, 0x9d, 0x48, 0x06, 0xd1, 0x77,
	0x05, 0x48, 0x22, 0x93, 0x70, 0xa1, 0x13, 0x30, 0x10, 0xfe, 0xaf, 0x8e,
	0x98, 0x8a, 0x26, 0xfd, 0x2f, 0xad, 0xa5, 0x05, 0x48, 0xc2, 0x40, 0xd8,
	0x1c, 0x41, 0xf0, 0x16, 0x52, 0x9b, 0x11, 0x0e, 0x5f, 0x6d, 0x35, 0x47,
	0xf8, 0x17, 0x55, 0x88, 0xb1, 0xdf, 0xa8, 0x63, 0x46, 0x08, 0x97, 0xa1,
	0xdd, 0xd0, 0x34, 0x7b, 0x44, 0x22, 0x1c, 0xfa, 0x85, 0x9a, 0x10, 0xa6,
	0x95, 0xd0, 0x2d, 0x2f, 0x08, 0xe3, 0x55, 0x09, 0x7b, 0x63, 0x18, 0x61,
	0x74, 0x4a, 0x09, 0xa2, 0x3e, 0x08, 0x2f, 0x12, 0x63, 0xd7, 0xc3, 0x9c,
	0x44, 0x98, 0x57, 0xc2, 0x4d, 0x39, 0x41, 0x78, 0x78, 0x5f, 0x7e, 0x6a,
	0x1d, 0x63, 0xc3, 0xc3, 0x34, 0x22, 0x2c, 0x0a, 0xa3, 0x57, 0x4a, 0x10,
	0x1d, 0xc5, 0xa3, 0x32, 0x2a, 0x1e, 0xa6, 0x15, 0x63, 0x4d, 0x08, 0x0f,
	0x65, 0x05, 0x81, 0x12, 0xee, 0x92, 0x08, 0x2b, 0xc3, 0x99, 0x61, 0xac,
	0xe7, 0xfd, 0x53, 0xc3, 0x65, 0x75, 0x90, 0x30, 0xee, 0x3d, 0xc0, 0xf0,
	0x6a, 0x50, 0xc3, 0x82, 0x10, 0xae, 0x4a, 0x07, 0x22, 0x8c, 0x5b, 0x8d,
	0xb0, 0xea, 0x21, 0x24, 0xc6, 0x92, 0x30, 0xae, 0xf3, 0x84, 0xd0, 0x4c,
	0x86, 0x9d, 0xd1, 0x1b, 0xb7, 0x54, 0x2b, 0xc2, 0x72, 0xa8, 0x37, 0x97,
	0x4b, 0x75, 0x00, 0xa1, 0x9b, 0xd4, 0x30, 0x37, 0x9e, 0x0b, 0xdf, 0x5e,
	0x21, 0x20, 0x34, 0xe5, 0x42, 0xec, 0x9c, 0xd6, 0x31, 0xfb, 0x79, 0x5d,
	0xae, 0x84, 0x78, 0x53, 0x69, 0x5a, 0x10, 0x21, 0xbc, 0xf9, 0x6d, 0xee,
	0x21, 0x9a, 0x8c, 0x4d, 0xbf, 0x4b, 0xbe, 0x3e, 0xd3, 0x24, 0x6c, 0x4f,
	0xf2, 0x0f, 0x41, 0x62, 0x54, 0xf3, 0x04, 0x79, 0xd7, 0x1a, 0xb6, 0x9a,
	0x8c, 0x03, 0x25, 0x3c, 0x7f, 0xfb, 0x4c, 0x8c, 0xea, 0x24, 0x20, 0x09,
	0x61, 0x27, 0xd7, 0xd6, 0x2a, 0x5a, 0xb8, 0xd0, 0x09, 0x18, 0x08, 0x9b,
	0x23, 0x08, 0xde, 0x3e, 0x6a, 0x33, 0xc2, 0xe1, 0x2b, 0xad, 0xe6, 0x08,
	0x87, 0xaf, 0xae, 0x9a, 0x23, 0x1c, 0xbe, 0xa2, 0xe6, 0x08, 0x8f, 0x8a,
	0xe0, 0x94, 0x70, 0x11, 0xba, 0x9a, 0x69, 0x43, 0x18, 0xe7, 0x93, 0x7c,
	0xa0, 0x9a, 0x4c, 0xee, 0x67, 0x7d, 0x00, 0xe6, 0xd3, 0xb4, 0x42, 0xbc,
	0x14, 0x11, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
	0x42, 0x60, 0x82,
}
